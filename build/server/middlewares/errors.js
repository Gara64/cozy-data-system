// Generated by CoffeeScript 1.8.0
var httpError, locker, logger;

locker = require('../lib/locker');

logger = require('printit')({
  date: true,
  prefix: 'app:error'
});

module.exports = function(err, req, res, next) {
  var message, statusCode, _ref;
  statusCode = err.status || ((_ref = err.headers) != null ? _ref.status : void 0) || 500;
  message = err instanceof Error ? err.message : err.error;
  res.send(statusCode, {
    error: message
  });
  if (err instanceof Error) {
    logger.error(err.message);
    logger.error(err.stack);
  }
  if (req.lock != null) {
    return locker.removeLock(req.lock);
  }
};

module.exports.http = httpError = function(code, msg) {
  var err;
  err = new Error(msg);
  err.status = code;
  return err;
};

module.exports.notFound = function() {
  return httpError(404, 'Not Found');
};

module.exports.notAuthorized = function() {
  return httpError(403, 'Application is not authorized');
};

module.exports.noPassword = function() {
  return httpError(400, 'No password field in request\'s body');
};
