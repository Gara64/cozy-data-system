// Generated by CoffeeScript 1.9.1
var db, getCredentialsHeader, getProxy, json, request, url;

getProxy = require('../lib/proxy').getProxy;

db = require('../helpers/db_connect_helper').db_connect();

require('../lib/proxy').initializeProxy();

json = require('request-json');

request = require('request');

url = require('url');

getCredentialsHeader = function() {
  var basicCredentials, credentials;
  credentials = db.connection.auth.username + ":" + db.connection.auth.password;
  basicCredentials = new Buffer(credentials).toString('base64');
  return "Basic " + basicCredentials;
};

module.exports.proxy = function(req, res, next) {
  var auth, bodyToTransmit, options, targetURL;
  auth = req.headers['authorization'];
  if (process.env.NODE_ENV === "production") {
    req.headers['authorization'] = getCredentialsHeader();
  } else {
    req.headers['authorization'] = null;
  }
  req.url = req.url.replace('replication', db.name);
  targetURL = req.url.replace('replication', 'cozy');
  options = {
    method: req.method,
    headers: req.headers,
    uri: url.resolve("http://" + db.connection.host + ":" + db.connection.port, targetURL)
  };
  bodyToTransmit = JSON.stringify(req.body);
  if ((bodyToTransmit != null) && bodyToTransmit.length > 0) {
    options['body'] = bodyToTransmit;
  }
  return request(options, function(err, couchRes, body) {
    if ((err != null) || (couchRes == null)) {
      console.log(err);
      return res.send(500, err);
    } else {
      if (req.method === 'GET') {
        req.headers['authorization'] = auth;
        res.set(couchRes.headers);
        res.statusCode = couchRes.statusCode;
        res.body = body;
        return next();
      } else {
        res.set(couchRes.headers);
        res.statusCode = couchRes.statusCode;
        return res.send(body);
      }
    }
  });
};
