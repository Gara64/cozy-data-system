// Generated by CoffeeScript 1.7.1
var User, checkBody, nodemailer, sendEmail, user;

nodemailer = require("nodemailer");

User = require('../lib/user');

user = new User();

sendEmail = function(mailOptions, callback) {
  var transport;
  transport = nodemailer.createTransport("SMTP", {});
  return transport.sendMail(mailOptions, function(error, response) {
    transport.close();
    return callback(error, response);
  });
};

checkBody = function(body, attributes) {
  var attr, missingAttributes, _i, _len;
  missingAttributes = [];
  for (_i = 0, _len = attributes.length; _i < _len; _i++) {
    attr = attributes[_i];
    if (body[attr] == null) {
      missingAttributes.push(attr);
    }
  }
  return missingAttributes;
};

module.exports.send = function(req, res, next) {
  var attrs, body, err, mailOptions, missingAttributes;
  body = req.body;
  missingAttributes = checkBody(body, ['to', 'from', 'subject', 'content']);
  if (missingAttributes.length > 0) {
    attrs = missingAttributes.join(" ");
    err = new Error("Body has at least one missing attribute (" + attrs + ").");
    err.status = 400;
    return next(err);
  } else {
    mailOptions = {
      to: body.to,
      from: body.from,
      subject: body.subject,
      text: body.content,
      html: body.html || void 0
    };
    if (body.attachments != null) {
      mailOptions.attachments = body.attachments;
    }
    return sendEmail(mailOptions, function(error, response) {
      if (error) {
        console.log("[sendMail] Error : " + error);
        return next(new Error(error));
      } else {
        return res.send(200, response);
      }
    });
  }
};

module.exports.sendToUser = function(req, res, next) {
  var attrs, body, err, missingAttributes;
  body = req.body;
  missingAttributes = checkBody(body, ['from', 'subject', 'content']);
  if (missingAttributes.length > 0) {
    attrs = missingAttributes.join(" ");
    err = new Error("Body has at least one missing attribute (" + attrs + ").");
    err.status = 400;
    return next(err);
  } else {
    return user.getUser(function(err, user) {
      var mailOptions;
      if (err) {
        console.log("[sendMailToUser] err: " + err);
        return next(new Error(err));
      } else {
        mailOptions = {
          to: user.email,
          from: body.from,
          subject: body.subject,
          text: body.content,
          html: body.html || void 0
        };
        if (body.attachments != null) {
          mailOptions.attachments = body.attachments;
        }
        return sendEmail(mailOptions, function(error, response) {
          if (error) {
            console.log("[sendMail] Error : " + error);
            return next(new Error(error));
          } else {
            return res.send(200, response);
          }
        });
      }
    });
  }
};

module.exports.sendFromUser = function(req, res, next) {
  var attrs, body, err, missingAttributes;
  body = req.body;
  missingAttributes = checkBody(body, ['to', 'subject', 'content']);
  if (missingAttributes.length > 0) {
    attrs = missingAttributes.join(" ");
    err = new Error("Body has at least one missing attribute (" + attrs + ").");
    err.status = 400;
    return next(err);
  } else {
    return user.getUser(function(err, user) {
      var mailOptions;
      if (err) {
        console.log("[sendMailFromUser] err: " + err);
        return next(new Error(err));
      } else {
        mailOptions = {
          to: body.to,
          from: user.email,
          subject: body.subject,
          text: body.content,
          html: body.html || void 0
        };
        if (body.attachments != null) {
          mailOptions.attachments = body.attachments;
        }
        return sendEmail(mailOptions, function(error, response) {
          if (error) {
            console.log("[sendMail] Error : " + error);
            return next(new Error(error));
          } else {
            return res.send(200, response);
          }
        });
      }
    });
  }
};
