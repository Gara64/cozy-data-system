// Generated by CoffeeScript 1.7.1
var db, deleteFiles, fs, log, multiparty;

fs = require("fs");

multiparty = require('multiparty');

log = require('printit')({
  date: true,
  prefix: 'attachment'
});

db = require('../helpers/db_connect_helper').db_connect();

deleteFiles = require('../helpers/utils').deleteFiles;

module.exports.add = function(req, res, next) {
  var form;
  form = new multiparty.Form();
  form.parse(req);
  form.on('part', function(part) {
    var fileData, stream;
    if (part.filename == null) {
      return part.resume();
    } else {
      fileData = {
        name: part.filename,
        "content-type": part.headers['content-type']
      };
      log.info("attachment " + fileData.name + " ready for storage");
      stream = db.saveAttachment(req.doc, fileData, function(err) {
        if (err) {
          console.log("[Attachment] err: " + JSON.stringify(err));
          return form.emit('error', new Error(err.error));
        }
      });
      return part.pipe(stream);
    }
  });
  form.on('progress', function(bytesReceived, bytesExpected) {});
  form.on('error', function(err) {
    return next(err);
  });
  return form.on('close', function() {
    log.info('attachement form fully parsed');
    res.send(201, {
      success: true
    });
    return next();
  });
};

module.exports.get = function(req, res, next) {
  var name, stream;
  name = req.params.name;
  stream = db.getAttachment(req.doc.id, name, function(err) {
    if ((err != null) && (err.error = "not_found")) {
      err = new Error("not found");
      err.status = 404;
      return next(err);
    } else if (err) {
      return next(new Error(err.error));
    }
  });
  if (req.headers['range'] != null) {
    stream.setHeader('range', req.headers['range']);
  }
  res.on('close', function() {
    return stream.abort();
  });
  return stream.pipe(res);
};

module.exports.remove = function(req, res, next) {
  var name;
  name = req.params.name;
  return db.removeAttachment(req.doc, name, function(err) {
    next();
    if ((err != null) && (err.error = "not_found")) {
      err = new Error("not found");
      err.status = 404;
      return next(err);
    } else if (err != null) {
      console.log("[Attachment] err: " + JSON.stringify(err));
      return next(err);
    } else {
      return res.send(204, {
        success: true
      });
    }
  });
};
