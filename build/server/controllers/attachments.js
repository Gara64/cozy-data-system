// Generated by CoffeeScript 1.7.1
var db, deleteFiles, fs;

fs = require("fs");

db = require('../helpers/db_connect_helper').db_connect();

deleteFiles = require('../helpers/utils').deleteFiles;

module.exports.add = function(req, res, next) {
  var err, file, fileData, name, stream;
  if (req.files["file"] != null) {
    file = req.files["file"];
    if (req.body.name != null) {
      name = req.body.name;
    } else {
      name = file.name;
    }
    fileData = {
      name: name,
      "content-type": file.type
    };
    stream = db.saveAttachment(req.doc, fileData, function(err) {
      if (err) {
        console.log("[Attachment] err: " + JSON.stringify(err));
        deleteFiles(req.files);
        return next(new Error(err.error));
      } else {
        deleteFiles(req.files);
        res.send(201, {
          success: true
        });
        return next();
      }
    });
    return fs.createReadStream(file.path).pipe(stream);
  } else {
    err = new Error("No file sent");
    err.status = 400;
    return next(err);
  }
};

module.exports.get = function(req, res, next) {
  var name, stream;
  name = req.params.name;
  stream = db.getAttachment(req.doc.id, name, function(err) {
    if ((err != null) && (err.error = "not_found")) {
      err = new Error("not found");
      err.status = 404;
      return next(err);
    } else if (err) {
      return next(new Error(err.error));
    } else {
      return res.send(200, {
        success: true
      });
    }
  });
  if (req.headers['range'] != null) {
    stream.setHeader('range', req.headers['range']);
  }
  stream.pipe(res);
  return res.on('close', function() {
    return stream.abort();
  });
};

module.exports.remove = function(req, res, next) {
  var name;
  name = req.params.name;
  return db.removeAttachment(req.doc, name, function(err) {
    next();
    if ((err != null) && (err.error = "not_found")) {
      err = new Error("not found");
      err.status = 404;
      return next(err);
    } else if (err != null) {
      console.log("[Attachment] err: " + JSON.stringify(err));
      return next(err);
    } else {
      return res.send(204, {
        success: true
      });
    }
  });
};
