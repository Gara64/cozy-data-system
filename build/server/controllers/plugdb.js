// Generated by CoffeeScript 1.10.0
var Plug, init;

Plug = require('../lib/plug');

init = require('../lib/init');

module.exports.auth = function(req, res, next) {
  return Plug.isInit(function(err, isInit) {
    console.log('err : ' + JSON.stringify(err));
    console.log('is init : ' + isInit);
    if (err != null) {
      return Plug.init(function(err) {
        init.addSharingRules(function(err) {
          if (err != null) {
            log.error(err);
          }
          return init.insertSharesPlugDB(function(err) {
            if (err != null) {
              return log.error(err);
            }
          });
        });
        return res.send(200, 'ok');
      });
    } else {
      return Plug.authFP(function(err, authID) {
        if (err != null) {
          return res.sendStatus(500, {
            error: err
          });
        } else if (authID == null) {
          return res.send(401);
        } else {
          return res.send(200, authID);
        }
      });
    }
  });
};

module.exports.isAuth = function(req, res, next) {
  return Plug.isInit(function(err, isInit) {
    if (err != null) {
      return res.send(500, {
        error: 'PlugDB internal error'
      });
    } else {
      console.log('is init : ' + JSON.stringify(isInit));
      return res.send(200, {
        isAuth: isInit
      });
    }
  });
};


/*
if process.env.USE_PLUGDB
    #plugdb
    init.initPlugDB (err) ->
        log.error err if err?
        #sharing rules
        init.addSharingRules (err) ->
            log.error err if err?
            init.insertSharesPlugDB (err) ->
                log.error err if err?
 */
